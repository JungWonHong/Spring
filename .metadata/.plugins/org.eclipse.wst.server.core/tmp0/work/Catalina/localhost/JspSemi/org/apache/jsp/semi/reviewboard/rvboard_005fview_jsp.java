/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.44
 * Generated at: 2017-08-03 15:07:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.semi.reviewboard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import semi.db.bean.*;
import semi.db.*;

public final class rvboard_005fview_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("semi.db.bean");
    _jspx_imports_packages.add("semi.db");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	String id = (String) session.getAttribute("id");
	//게시물의 내용이 담겨있는 boarddata 속성의 데이터를 BoardBean 타입으로 
	//변환하여 얻습니다.
	ReviewBoardBean rv = (ReviewBoardBean) request.getAttribute("rv");

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Review 게시판</title>\r\n");
      out.write("<link href=\"./css/board.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n");
      out.write("<link href=\"./css/top.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n");
      out.write("<style>\r\n");
      out.write(".star_rating a.on {\r\n");
      out.write("\tcolor: #FFE400;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".star_rating a.off {\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("\tcolor: #e8e3e3;\r\n");
      out.write("}\r\n");
      out.write("\ttd {text-align:center;}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t\tfunction windowopen(){\r\n");
      out.write("\t\t    var popUrl = \"./rvBoardDelete.bo?num=");
      out.print(rv.getRv_no());
      out.write("\"; //팝업창에 출력될 페이지 URL\r\n");
      out.write("\t\t\tvar popOption = \"width=600, height=150, resizable=no, scrollbars=no, status=no;\"; //팝업창 옵션(optoin)\r\n");
      out.write("\t\t\twindow.open(popUrl, \"\", popOption);\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../Header.jsp", out, false);
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../menubar.jsp", out, false);
      out.write("\r\n");
      out.write("\t<!-- 게시판 수정 -->\r\n");
      out.write("\t<table>\r\n");
      out.write("\t\t<tr valign=\"middle\">\r\n");
      out.write("\t\t\t<th colspan=\"2\">현장의 소리 view</th>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<div>글쓴이</div>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(rv.getRv_id());
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<div>제 목</div>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(rv.getRv_title());
      out.write("<!-- 게시물의 제목을 출력합니다. --></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<div>기업 평점</div>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<p class=\"star_rating\">\r\n");
      out.write("\t\t\t\t\t");

						System.out.println(rv.getRv_score());
						for (int n = 0; n < rv.getRv_score(); n++) {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<a class=\"on\" href=\"javascript:void(0)\">★</a>\r\n");
      out.write("\t\t\t\t\t");

						}
						int a = 5 - rv.getRv_score();
						if (a > 0) {
							for (int n = 0; n < a; n++) {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<a class=\"off\" href=\"javascript:void(0)\">★</a>\r\n");
      out.write("\t\t\t\t\t");

						}
						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</p>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<div>내 용</div>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t<td><textarea name=\"rv_content\" cols=\"67\" rows=\"15\"\r\n");
      out.write("\t\t\t\t\treadonly=\"readonly\">");
      out.print(rv.getRv_content());
      out.write("</textarea></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan=\"2\" class=\"h30 lime center\">\r\n");
      out.write("\t\t\t\t");

					if (id != null && id.length() != 0) {
						if (id.equals(rv.getRv_id()) || id.equals("admin")) {
				
      out.write(" <a\r\n");
      out.write("\t\t\t\thref=\"./rvBoardModify.bo?num=");
      out.print(rv.getRv_no());
      out.write("\"> [수정] </a>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t<a href=\"javascript:windowopen();\"> [삭제] </a>&nbsp;&nbsp; ");

 	}
 	}
 
      out.write(" <a href=\"./rvBoardList.bo\">[목록]</a>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../Footer.jsp", out, false);
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
