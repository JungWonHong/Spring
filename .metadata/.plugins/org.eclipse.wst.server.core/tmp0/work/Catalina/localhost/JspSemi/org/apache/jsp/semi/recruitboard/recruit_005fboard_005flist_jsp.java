/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.44
 * Generated at: 2017-08-04 00:21:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.semi.recruitboard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import semi.db.bean.*;
import semi.db.*;

public final class recruit_005fboard_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("semi.db.bean");
    _jspx_imports_packages.add("semi.db");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("euc-kr");
	List<RecruitBoardBean> recruitlist = (ArrayList<RecruitBoardBean>)request.getAttribute("recruitlist");
	String hirekind = "";
	String career = "";

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>채용 게시판</title>\r\n");
      out.write("<link href=\"./css/recruit.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n");
      out.write("<link href=\"./css/recruit2.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n");
      out.write("<style>\r\n");
      out.write("input[type=submit]{\r\n");
      out.write("background-color: #F7CA18;\r\n");
      out.write("border-radius: 5px;\r\n");
      out.write("border : 0px;\r\n");
      out.write("padding : 5px;\r\n");
      out.write("margin-left : 10px;\r\n");
      out.write("margin-top:40px;\r\n");
      out.write("height : 50px;\r\n");
      out.write("width : 70px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../Header.jsp", out, false);
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../menubar.jsp", out, false);
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t");

		String id = (String)session.getAttribute("id");
		if(id!=null && id.length()!=0) {
			if(id.equals("admin")){	
	
      out.write("\r\n");
      out.write("\t<form action=\"RecruitWrite.bo\" method=\"post\">\r\n");
      out.write("\t\t<input type=\"submit\" value=\"글쓰기\">\r\n");
      out.write("\t</form>\r\n");
      out.write("\t");
}} 
      out.write("\r\n");
      out.write("\t<div class=\"premium_banner\">\r\n");
      out.write("\t\t<ul>\r\n");
      out.write("\t\t");
 
			for(RecruitBoardBean r : recruitlist){
		
      out.write("\r\n");
      out.write("\t\t\t<li class=\"list\">\r\n");
      out.write("\t\t\t\t<div class=\"box\">\r\n");
      out.write("\t\t\t\t\t<div class=\"photo\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"./RecruitDetailAction.bo?no=");
      out.print(r.getRc_no() );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t");
 
						String company = "";
						if(r.getRc_company().equals("삼성전자")){
							company = "samsung";
						} else if(r.getRc_company().equals("LG전자")){
							company = "lg";
						} else if(r.getRc_company().equals("CJ올리브네트웍스")){
							company = "cj";
						} else if(r.getRc_company().equals("IBM")){
							company = "ibm";
						} else if(r.getRc_company().equals("우리은행")){
							company = "woori";
						} else if(r.getRc_company().equals("SK텔레콤")){
							company = "sktelecom";
						}  else if(r.getRc_company().equals("신세계")){
							company = "shinsegae";
						}  else if(r.getRc_company().equals("신한은행")){
							company = "shinhan";
						}  else if(r.getRc_company().equals("삼성SDS")){
							company = "sds";
						}  else if(r.getRc_company().equals("네이버")){
							company = "naver";
						}  else if(r.getRc_company().equals("롯데정보통신")){
							company = "lotte";
						}  else if(r.getRc_company().equals("KT")){
							company = "kt";
						}  else if(r.getRc_company().equals("KIA")){
							company = "kia";
						}  else if(r.getRc_company().equals("국민은행")){
							company = "kb";
						}  else if(r.getRc_company().equals("카카오")){
							company = "kakao";
						}  else if(r.getRc_company().equals("하나은행")){
							company = "hanabank";
						}  else if(r.getRc_company().equals("Google")){
							company = "google";
						}  else if(r.getRc_company().equals("아시아나")){
							company = "asiana";
						}  else if(r.getRc_company().equals("두산 정보통신")){
							company = "doosan";
						}  else if(r.getRc_company().equals("휴맥스")){
							company = "humax";
						} 
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<img src=\"./image/");
      out.print(company );
      out.write(".JPG\" alt=");
      out.print(r.getRc_company() );
      out.write("></a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"info_box\">\r\n");
      out.write("\t\t\t\t\t\t<a style=\"text-decoration: none\" href=\"./RecruitDetailAction.bo?no=");
      out.print(r.getRc_no() );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t<dl style=\"margin-top: 0px;padding-top:0px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<dt>");
      out.print(r.getRc_ability() );
      out.write("</dt> \r\n");
      out.write("\t\t\t\t\t\t\t\t<dd class=\"ib_01\">마감 : ");
      out.print(r.getRc_expire() );
      out.write("</dd>\r\n");
      out.write("\t\t\t\t\t\t\t\t");
if(r.getRc_hirekind() == 1) 
									hirekind = "정규직";
								  else
									hirekind = "계약직";  
								
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<dd class=\"ib_02\">");
      out.print(hirekind );
      out.write("</dd> \r\n");
      out.write("\t\t\t\t\t\t\t\t");
if(r.getRc_career() == 1)
									career = "신입";
								else if(r.getRc_career() == 2)
									career = "경력";
								else
									career = "신입/경력";
								
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<dd class=\"ib_03\">");
      out.print(career );
      out.write("</dd> \r\n");
      out.write("\t\t\t\t\t\t\t</dl>\r\n");
      out.write("\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t</div>\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t");
} 
      out.write("\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../Footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
