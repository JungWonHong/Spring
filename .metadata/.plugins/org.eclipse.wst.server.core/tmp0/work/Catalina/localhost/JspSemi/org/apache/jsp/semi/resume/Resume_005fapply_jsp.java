/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.44
 * Generated at: 2017-08-04 01:18:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.semi.resume;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import semi.db.bean.*;

public final class Resume_005fapply_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("semi.db.bean");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	PMemberBean pmember = (PMemberBean) request.getAttribute("pmember");
	String cmpname = (String) request.getAttribute("cmpname");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>이력서 작서</title>\r\n");
      out.write("<script src=\"./js/jquery-3.2.1.js\"></script>\r\n");
      out.write("<script src=\"./js/resume.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\tvar count = 0;\r\n");
      out.write("\tvar addCount;\r\n");
      out.write("\t//행추가\r\n");
      out.write("\tfunction addInputBox() {\r\n");
      out.write("\t\tif (count == 4) {\r\n");
      out.write("\t\t\talert('자격증은 최대 3개입니다.')\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif (count == 0)\r\n");
      out.write("\t\t\tcount++;\r\n");
      out.write("\t\tfor (var i = 1; i <= count; i++) {\r\n");
      out.write("\t\t\tif (!document.getElementsByName(\"test\" + i)[0]) {\r\n");
      out.write("\t\t\t\taddCount = i;\r\n");
      out.write("\t\t\t\tbreak;\r\n");
      out.write("\t\t\t} else\r\n");
      out.write("\t\t\t\taddCount = count;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tvar addStr = \"<tr><td><input type=checkbox name=checkList value=\" + addCount + \" size=80 >    \"\r\n");
      out.write("\t\t\t\t+ \"<input type=text name=test\"+addCount+\" id='lbfile' size=20 ></td></tr>\";\r\n");
      out.write("\t\tvar table = document.getElementById(\"dynamic_table\");\r\n");
      out.write("\t\tvar newRow = table.insertRow();\r\n");
      out.write("\t\tvar newCell = newRow.insertCell();\r\n");
      out.write("\t\tnewCell.innerHTML = addStr;\r\n");
      out.write("\t\tcount++;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t//행삭제\r\n");
      out.write("\tfunction subtractInputBox() {\r\n");
      out.write("\t\tvar table = document.getElementById(\"dynamic_table\");\r\n");
      out.write("\t\t//var max = document.gForm.checkList.length;\r\n");
      out.write("\t\t//alert(max);\r\n");
      out.write("\t\tvar rows = dynamic_table.rows.length;\r\n");
      out.write("\t\tvar checkbox = document.getElementsByName(\"checkList\")\r\n");
      out.write("\t\tvar chk = 0;\r\n");
      out.write("\t\tif (rows > 0) {\r\n");
      out.write("\t\t\tfor (var i = 0; i < checkbox.length; i++) {\r\n");
      out.write("\t\t\t\tif (checkbox[i].checked == true) {\r\n");
      out.write("\t\t\t\t\ttable.deleteRow(i);\r\n");
      out.write("\t\t\t\t\ti--;\r\n");
      out.write("\t\t\t\t\tcount--;\r\n");
      out.write("\t\t\t\t\tchk++;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif (chk <= 0) {\r\n");
      out.write("\t\t\t\talert(\"삭제할 행을 체크해 주세요.\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\talert(\"더이상 삭제할 수 없습니다.\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("<link href=\"./css/board.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<link href=\"./css/top.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../Header.jsp", out, false);
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../menubar.jsp", out, false);
      out.write("\r\n");
      out.write("\t<form name=\"applyResume\" method=\"post\" enctype=\"multipart/form-data\"\r\n");
      out.write("\t\taction=\"ApplyCompany.re\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<h3>이력서 등록</h3>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>이름</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(pmember.getP_name());
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>나이</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(pmember.getP_age());
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>ID</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(pmember.getP_id());
      out.write(" <input type=\"hidden\" name=\"p_id\"\r\n");
      out.write("\t\t\t\t\tvalue=");
      out.print(pmember.getP_id());
      out.write("></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>연락처</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(pmember.getP_hp());
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>Email</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(pmember.getP_email());
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>지원회사명</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(cmpname);
      out.write("<input type=\"hidden\" name=\"cmpname\"\r\n");
      out.write("\t\t\t\t\tvalue=");
      out.print(cmpname);
      out.write("></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>입사 후 포부(100~500자)</td>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t<textarea id=\"comment\" rows=\"10\" cols=\"50\" name=\"comment\"></textarea>\r\n");
      out.write("\t\t\t\t\t\t<p id=\"remain\">0/500</p>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>포트폴리오 첨부</td>\r\n");
      out.write("\t\t\t\t<td><input type=\"file\" name=\"portpolio\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>IT관련 자격증(최대 3개)</td>\r\n");
      out.write("\t\t\t\t<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <input type=\"button\"\r\n");
      out.write("\t\t\t\t\tvalue=\"자격증 추가\" onclick=\"javascript:addInputBox();\"> | <input\r\n");
      out.write("\t\t\t\t\ttype=\"button\" value=\"자격증 삭제\"\r\n");
      out.write("\t\t\t\t\tonclick=\"javascript:subtractInputBox();\">\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=2>\r\n");
      out.write("\t\t\t\t\t<table id=\"dynamic_table\" border=\"1\">\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><a id=\"addResume\" href=\"javascript:applyResume.submit()\">[지원]</a>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t<td><a href=\"javascript:history.go(-1)\">[뒤로]</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../Footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
