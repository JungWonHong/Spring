/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.45
 * Generated at: 2017-08-10 04:00:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._005f1_textfileget_0028load_0029;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class _3_005f1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<title>sample1</title>\r\n");
      out.write("\t\t<link href=\"../css/ex1.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("\t\t<script src=\"../js/jquery-3.2.1.js\"></script>\r\n");
      out.write("\t\t<!-- function(responseTxt, status, xhr)\r\n");
      out.write("\t\t\t- responseTxt : 서버로 부터 리턴된 텍스트 데이터를 가져옵니다.\r\n");
      out.write("\t\t\t- status : 서버로 부터의 리턴된 상태를 가져옵니다.\r\n");
      out.write("\t\t\t\t(성공인 경우 \"success\", 실패한 경우 \"error\")\r\n");
      out.write("\t\t\t- xhr : XMLHttpRequest 객체를 포함합니다.\r\n");
      out.write("\t\t\t- xhr.statusText : 상태 설명 문자열을 가져 옵니다.(주로 오류 내용을 가져오기)\r\n");
      out.write("\t\t\t- xhr.status : 상태 코드를 가져옵니다.\r\n");
      out.write("\t\t\t예) 200 : 서버가 응답을 완료했으며 아무런 문제가 없는 경우\r\n");
      out.write("\t\t\t   304 : 응답 내용이 이전 응답 내용과 동일한 경우\r\n");
      out.write("\t\t\t   404 : 파일을 찾지 못하는 경우\r\n");
      out.write("\t\t\t   500 : 서버에서 클라이언트 요청을 처리 중에 에러 발생한 경우\r\n");
      out.write("\t\t\t    -->\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\t\t$(function(){\r\n");
      out.write("\t\t\t\t$.ajaxSetup({\r\n");
      out.write("\t\t\t\t\tcache: false\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$(\"button\").click(function(){ //변경을 클릭하면\r\n");
      out.write("\t\t\t\t\t$(\"#div1\").load(\"sample1.txt\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tfunction(responseTxt, status, xhr){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tif(status == \"success\"){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\talert(responseTxt);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t} else if(status == \"error\"){ //파일명을 sample.txt로 변경해 보세요\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\talert(\"xhr.status : \" + xhr.status  //404\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ \"\\n xhr.statusText : \" + xhr.statusText); //error\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t);\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t<pre id=\"div1\">버튼을 클릭하면 이곳에 sample1.txt의 내용이 나타납니다.</pre>\r\n");
      out.write("\t\t<button>sample1.txt 불러오기</button>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
