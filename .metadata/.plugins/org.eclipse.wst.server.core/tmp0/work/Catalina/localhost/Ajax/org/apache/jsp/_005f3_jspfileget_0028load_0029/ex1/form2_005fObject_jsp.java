/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.45
 * Generated at: 2017-08-11 00:28:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._005f3_jspfileget_0028load_0029.ex1;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class form2_005fObject_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<title>placeholder</title>\r\n");
      out.write("\t\t<link href=\"../../css/form.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("\t\t<script src=\"http://code.jquery.com/jquery-latest.js\"></script>\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\t\t$(function(){\r\n");
      out.write("\t\t\t\t$(\"form\").submit(function(e){ //전송 버튼 클릭시\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\te.preventDefault();\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tvar check = 0; //이름에 포커스를 줄때는 check=0입니다.\r\n");
      out.write("\t\t\t\t\t\t\t\t   //나이에 포커스를 줄때는 check=0입니다.\r\n");
      out.write("\t\t\t\t\t\t\t\t   //주소에 포커스를 줄때는 check=0입니다.\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif($(\"#name\").val()==\"\"){//이름을 입력하지 않는 경우\r\n");
      out.write("\t\t\t\t\t\t$(\"#name\").attr(\"placeholder\", \"이름을 입력하세요\");\r\n");
      out.write("\t\t\t\t\t\t//이름에 포커스를 줍니다.\r\n");
      out.write("\t\t\t\t\t\t$(\"#name\").focus();\r\n");
      out.write("\t\t\t\t\t\tcheck++;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif($(\"#age\").val()==\"\"){//나이를 입력하지 않는 경우\r\n");
      out.write("\t\t\t\t\t\t//placeholder의 값을 변경합니다.\r\n");
      out.write("\t\t\t\t\t\t$(\"#age\").attr(\"placeholder\", \"나이를 입력하세요\");\r\n");
      out.write("\t\t\t\t\t\t//나이에 포커스를 줍니다.\r\n");
      out.write("\t\t\t\t\t\tif(check==0) $(\"#age\").focus();\r\n");
      out.write("\t\t\t\t\t\tcheck++;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif($(\"#address\").val()==\"\"){//주소를 입력하지 않는 경우\r\n");
      out.write("\t\t\t\t\t\t//placeholder의 값을 변경합니다.\r\n");
      out.write("\t\t\t\t\t\t$(\"#address\").attr(\"placeholder\", \"주소를 입력하세요\");\r\n");
      out.write("\t\t\t\t\t\t//이름에 포커스를 줍니다.\r\n");
      out.write("\t\t\t\t\t\tif(check==0) $(\"#adderss\").focus();\r\n");
      out.write("\t\t\t\t\t\tcheck++;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t//input 태그 중 빈 곳이 한 곳이라도 있으면 placeholder의 색상을 변경합니다.\r\n");
      out.write("\t\t\t\t\tif(check!=0){\r\n");
      out.write("\t\t\t\t\t\t//placeholder의 색상을 빨간색으로 변경하는 스타일을 head태그 뒤에 추가합니다.\r\n");
      out.write("\t\t\t\t\t\t$(\"<style>input::-webkit-input-placeholder{color:red}</style>\").appendTo(\"head\"); //크롬, 사파리\r\n");
      out.write("\t\t\t\t\t\t$(\"<style>input::-moz-placeholder{color:red}</style>\").appendTo(\"head\"); //파이어폭스\r\n");
      out.write("\t\t\t\t\t\t$(\"<style>input::-ms-input-placeholder{color:red}</style>\").appendTo(\"head\"); //IE\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t$(\"style\").remove(); //style엘리먼트를 삭제합니다.\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t//객체 형태로 파라미터 이름과 값을 전달합니다.\r\n");
      out.write("\t\t\t\t\t\tvar data = { \r\n");
      out.write("\t\t\t\t\t\t\t\tname:$(\"#name\").val(),\r\n");
      out.write("\t\t\t\t\t\t\t\tage :$(\"#age\").val(),\r\n");
      out.write("\t\t\t\t\t\t\t\taddress : $(\"#address\").val()\r\n");
      out.write("\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\t$(\"div\").load(\"process.jsp\", data);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}); //click end\r\n");
      out.write("\t\t\t}); //ready end\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t<form action=\"process.jsp\" method=\"post\">\r\n");
      out.write("\t\t\t<span>이름</span>\r\n");
      out.write("\t\t\t<input type=\"text\" placeholder=\"이름\" id=\"name\" name=\"name\"><br>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<span>나이</span>\r\n");
      out.write("\t\t\t<input type=\"text\" placeholder=\"나이\" id=\"age\" name=\"age\"><br>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<span>주소</span>\r\n");
      out.write("\t\t\t<input type=\"text\" placeholder=\"주소\" id=\"address\" name=\"address\"><br>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<input type=\"submit\" value=\"전송\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div></div>\t\t\t\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
