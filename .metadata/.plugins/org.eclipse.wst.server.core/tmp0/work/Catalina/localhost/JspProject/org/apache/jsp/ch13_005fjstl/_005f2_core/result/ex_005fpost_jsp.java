/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.45
 * Generated at: 2017-08-08 01:02:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ch13_005fjstl._005f2_core.result;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ex_005fpost_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>ex_post.jsp</title>\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("\twidth: 777px;\r\n");
      out.write("\tmargin: 20px auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("fieldset {\r\n");
      out.write("\tpadding: 50px;\r\n");
      out.write("\twidth: 600px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script src=\"../../../js/jquery-3.2.1.js\" ></script>\r\n");
      out.write("<script src=\"../../../js/validate_kr.js\" charset=\"euc-kr\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<fieldset>\r\n");
      out.write("\t\t<legend>유효성 검사</legend>\r\n");
      out.write("\t\t<form name=\"myform\" method=\"post\" action=\"send.jsp\">\r\n");
      out.write("          ID: <input type=text size=10 name=id id=id>\r\n");
      out.write("              <input type=button value=\"id중복체크\" id=idcheck>\r\n");
      out.write("\t\t\t<br> 비밀번호 <input type=password name=pass id=pass><br>\r\n");
      out.write("\t\t\t주민번호 :<input type=text size=6 name=jumin1 id=jumin1 maxlength=6>-\r\n");
      out.write("\t\t\t<input type=text size=7 name=jumin2 id=jumin2 maxlength=7><br>\r\n");
      out.write("\t\t\tE-Mail: <input type=text name=email id=email>@<input\r\n");
      out.write("\t\t\t\ttype=text name=domain id=domain> \r\n");
      out.write("\t\t\t<select name=sel id=sel>\r\n");
      out.write("\t\t\t\t<option value=\"\">직접입력</option>\r\n");
      out.write("\t\t\t\t<option value=\"naver.com\">naver.com</option>\r\n");
      out.write("\t\t\t\t<option value=\"daum.net\">daum.net</option>\r\n");
      out.write("\t\t\t\t<option value=\"nate.com\">nate.com</option>\r\n");
      out.write("\t\t\t\t<option value=\"gmail.com\">gmail.com</option>\r\n");
      out.write("\t\t\t</select><br> \r\n");
      out.write("\t\t\t성별: <input type=radio name=gender id=gender1 value=\"woman\">여자\r\n");
      out.write("\t\t\t<input type=radio name=gender id=gender2 value=\"man\">남자<br>\r\n");
      out.write("\t\t\t취미: <input type=checkbox name=hobby id=hobby1 value=\"독서\"> 독서\r\n");
      out.write("\t\t\t<input type=checkbox name=hobby id=hobby2 value=\"놀기\">놀기 <input\r\n");
      out.write("\t\t\t\ttype=checkbox name=hobby id=hobby3 value=\"등산\">등산 <input\r\n");
      out.write("\t\t\t\ttype=checkbox name=hobby id=hobby4 value=\"노래\">노래 <input\r\n");
      out.write("\t\t\t\ttype=checkbox name=hobby id=hobby5 value=\"게임\">게임<br>\r\n");
      out.write("\t\t\t우편번호:<input type=text size=3 name=post1 id=post1 maxlength=3>-\r\n");
      out.write("\t\t\t<input type=text size=3 name=post2 id=post2 maxlength=3> <input\r\n");
      out.write("\t\t\t\ttype=button value=우편검색 id=postcode><br> \r\n");
      out.write("\t\t\t주소: <input type=text size=50 name=address id=address><br> \r\n");
      out.write("\t\t\t자기소개:\r\n");
      out.write("\t\t\t<textarea rows=10 cols=75 name=intro id=intro></textarea>\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t<br> <input type=submit value=\"회원가입\"> <input type=reset\r\n");
      out.write("\t\t\t\tvalue=\"취소\">\r\n");
      out.write("\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\r\n");
      out.write("\t</fieldset>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
