package ex8_15_3_interface.sample2;
//클래스 A가 클래스 B를 직접 호출하지 않고 인터페이스를 매개체로 해서 클래스 A가
//인터페이스를 통해서 클래스 B의 메서드에 접근하도록 하면 클래스 B에 변경사항이 생기거나
//클래스 B와 같은 기능의 다른 클래스로
//대체 되어도 클래스 A는 전혀 영향을 받지 않도록 하는 것이 가능합니다.
//두 클래스간의 관계를 간접적으로 변경하기 위해서 인터페이스를 이용해서
//클래스 B의 선언과 구현을 분리해야 합니다.
public class A {
	A() {
	}
	//sample1과 차이점은 매개 변수의 타입이 클래스B에서 I로 변경되었습니다.
	//클래스 A는 여전히 클래스 B의 메서드를 호출하지만 클래스 A는 인터페이스 I하고만
	//직접적인 관계에 있기 때문에 클래스 B의 변경에 영향을 받지 않습니다.
	//매개변수를 통해서 인터페이스 I를 구현한 클래스의 인스턴스를 동적으로 제공받고 있습니다.
	//클래스 Thread의 생성자인 Thread(Runnable target)이 이런 방식으로 되어 있습니다.
	public void methodA(I i) {
		i.methodB();
	}
}
