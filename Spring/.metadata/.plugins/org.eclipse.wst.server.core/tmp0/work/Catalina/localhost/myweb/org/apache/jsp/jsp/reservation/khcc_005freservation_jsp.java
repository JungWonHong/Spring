/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.45
 * Generated at: 2017-09-28 03:40:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.reservation;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class khcc_005freservation_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("/jsp/reservation/../include/menubar_login.jsp", Long.valueOf(1506473848043L));
    _jspx_dependants.put("/jsp/reservation/../include/menubar_nologin.jsp", Long.valueOf(1506413706138L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1506557313050L));
    _jspx_dependants.put("/jsp/include/time.jsp", Long.valueOf(1506409770450L));
    _jspx_dependants.put("jar:file:/I:/KH/Spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/springFinal/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');

	String[] time = {"00:00", "01:00", "02:00", "03:00", "04:00", "05:00", 
					"06:00", "07:00", "08:00", "09:00", "10:00", "11:00", 
					"12:00", "13:00", "14:00", "15:00", "16:00", "17:00", 
					"18:00", "19:00", "20:00", "21:00", "22:00", "23:00", "24:00"};
	request.setAttribute("time", time);

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<title>KHCC - 실시간 예약</title>\r\n");
      out.write("<head>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"./resources/css/map2.css\" />\r\n");
      out.write("<link href=\"./resources/bootstrap-css/bootstrap.min.css\"\r\n");
      out.write("   rel=\"stylesheet\">\r\n");
      out.write("<link href=\"./resources/bootstrap-css/prettyPhoto.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"./resources/bootstrap-css/font-awesome.min.css\"\r\n");
      out.write("   rel=\"stylesheet\">\r\n");
      out.write("<link href=\"./resources/bootstrap-css/animate.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"./resources/bootstrap-css/main.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"./resources/bootstrap-css/responsive.css\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"./resources/js/jquery-3.2.1.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("#menu_wrap {\r\n");
      out.write("   position: absolute;\r\n");
      out.write("   overflow: scroll;\r\n");
      out.write("   top: 5px;\r\n");
      out.write("   left: 35%;\r\n");
      out.write("   margin-left: -280px;\r\n");
      out.write("   /* margin-top: 70px; */ \r\n");
      out.write("   margin-top: 150px;   /*include 하면서 마진 조정함(순일)*/\r\n");
      out.write("   z-index: 5;\r\n");
      out.write("   background-color: #fff;\r\n");
      out.write("   padding: 5px;\r\n");
      out.write("   border: 1px solid #999;\r\n");
      out.write("   height: 40%;\r\n");
      out.write("   width: 30%;\r\n");
      out.write("}\r\n");
      out.write("#keyword{width:300px; height:30px; margin-left:1%; margin-top:1%;}\r\n");
      out.write(".font{margin-left:10%; font-size:13pt; margin-top:2%;}\r\n");
      out.write(".subbt{  \r\n");
      out.write("     width: 80px;\r\n");
      out.write("   height: 28px;\r\n");
      out.write("   background: #2ABCB4;\r\n");
      out.write("   color: white;\r\n");
      out.write("   border: 0px; }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fif_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("   <div class=\"map_wrap\" style=\"margin-top:8%\">\r\n");
      out.write("      <div id=\"map\"\r\n");
      out.write("         style=\"width: 100%; height: 80%; position: relative; overflow: hidden;\"></div>\r\n");
      out.write("      <div id=\"menu_wrap\" class=\"bg_white\">\r\n");
      out.write("         <div class=\"option\">\r\n");
      out.write("            <div>\r\n");
      out.write("               <form onsubmit=\"searchPlaces(); return false;\">\r\n");
      out.write("                  <span class=\"font\">지역 :</span> <input type=\"text\" value=\"역삼\" id=\"keyword\" name=\"keyword\"\r\n");
      out.write("                     >\r\n");
      out.write("                  <button type=\"submit\" class=\"subbt\">검색하기</button>\r\n");
      out.write("               </form>\r\n");
      out.write("            </div>\r\n");
      out.write("         </div>\r\n");
      out.write("         <hr>\r\n");
      out.write("         <ul id=\"placesList\"></ul>\r\n");
      out.write("         <div id=\"pagination\"></div>\r\n");
      out.write("      </div>\r\n");
      out.write("   </div>\r\n");
      out.write("\r\n");
      out.write("   <div id=\"carList\" style=\"margin-top: 120px\">\r\n");
      out.write("      <!-- 예약확인 / 결제 모달창 -->\r\n");
      out.write("   <div class=\"modal fade\" id=\"reservation\">\r\n");
      out.write("      <div class=\"modal-dialog\">\r\n");
      out.write("         <div class=\"modal-content\">\r\n");
      out.write("            <form method=\"post\" action=\"khcc_reservation_pay.nhn\"\r\n");
      out.write("               onsubmit=\"return phone_check()\">\r\n");
      out.write("               <!-- header -->\r\n");
      out.write("               <div class=\"modal-header\">\r\n");
      out.write("                  <h3 class=\"modal-title\">예약확인</h3>\r\n");
      out.write("               </div>\r\n");
      out.write("               <!-- body -->\r\n");
      out.write("               <div class=\"modal-body\">\r\n");
      out.write("                  <table>\r\n");
      out.write("                     <tr><th>종류</th><td>\r\n");
      out.write("                        <input type=\"text\" name=\"c_kind\" id=\"c_kind\" readOnly></td></tr>\r\n");
      out.write("                     <tr><th>모델</th><td>\r\n");
      out.write("                        <input type=\"text\" name=\"c_model\" id=\"c_model\" readOnly></td></tr>\r\n");
      out.write("                     <tr><th>위치</th><td>\r\n");
      out.write("                        <input type=\"text\" name=\"c_place\" id=\"c_place\" readOnly></td></tr>\r\n");
      out.write("                     <tr><th>대여일</th><td>\r\n");
      out.write("                        <input type=\"date\" class=\"datepicker\" name=\"startDate\" id=\"startDate\">\r\n");
      out.write("                        <select id=\"starttime\" name=\"startTime\">\r\n");
      out.write("                           ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                        </select></td></tr>\r\n");
      out.write("                     <tr><th>반납일</th><td>\r\n");
      out.write("                     \t<input type=\"hidden\" name=\"c_id\" id=\"c_id\">\r\n");
      out.write("                        <input type=\"date\" class=\"datepicker\" name=\"endDate\" id=\"endDate\">\r\n");
      out.write("                        <select id=\"endtime\" name=\"endTime\">\r\n");
      out.write("                           ");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                        </select></td></tr>\r\n");
      out.write("                  </table>\r\n");
      out.write("                  <script>\r\n");
      out.write("                     $('#endtime').change(function chageSeltime(){\r\n");
      out.write("                        var id = $('#c_id').val();\r\n");
      out.write("                        var startDate = $('#startDate').val();\r\n");
      out.write("                        var endDate = $('#endDate').val();\r\n");
      out.write("                        var startTime = $('#starttime').val();\r\n");
      out.write("                        var endTime = $('#endtime').val();\r\n");
      out.write("                        $.ajax({\r\n");
      out.write("                           url:'./khcc_reservation_total.nhn',\r\n");
      out.write("                           data:'c_id=' + id + '&startDate=' + startDate + \"&endDate=\" + endDate \r\n");
      out.write("                                 + \"&startTime=\" + startTime + \"&endTime=\" + endTime,\r\n");
      out.write("                           success:function(data){\r\n");
      out.write("                              if(data < 0){\r\n");
      out.write("                                 alert('반납일은 대여일보다 작을 수 없습니다.');\r\n");
      out.write("                                 return false;\r\n");
      out.write("                              } else{\r\n");
      out.write("                                 $(\"#tot_price\").text('');\r\n");
      out.write("                                    $(\"#tot_price\").show();\r\n");
      out.write("                                    $(\"#tot_price\").append(\"<hr>총 결제금액 \" + data + \"원\").css(\"font-size\", \"20px\");\r\n");
      out.write("                              }\r\n");
      out.write("                           },\r\n");
      out.write("                           error:function(data){\r\n");
      out.write("                              alert('에러' + data);\r\n");
      out.write("                           }\r\n");
      out.write("                        });\r\n");
      out.write("                     });\r\n");
      out.write("                  </script>\r\n");
      out.write("                  <div id=\"tot_price\"></div>\r\n");
      out.write("                  <hr>\r\n");
      out.write("                  <h3 class=\"modal-title\">결제 정보</h3>\r\n");
      out.write("                     카드 이름<input type=\"text\" id=\"cardName\" name=\"cardName\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cardName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readOnly><br>\r\n");
      out.write("                     카드 번호<input type=\"text\" id=\"cardNum\" name=\"cardNum\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cardNum}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readOnly>\r\n");
      out.write("               </div>\r\n");
      out.write("\r\n");
      out.write("               <!-- Footer -->\r\n");
      out.write("               <div class=\"modal-footer\">\r\n");
      out.write("                  <input type=\"submit\" class=\"btn btn-default\" value=\"결제하기\">\r\n");
      out.write("                  <button class=\"btn btn-default\" data-dismiss=\"modal\">닫기</button>\r\n");
      out.write("               </div>\r\n");
      out.write("            </form>\r\n");
      out.write("         </div>\r\n");
      out.write("      </div>\r\n");
      out.write("   </div>\r\n");
      out.write("      <table id=\"output\" style=\"text-align:center; margin:0 auto;\">\r\n");
      out.write("      </table>\r\n");
      out.write("   </div>\r\n");
      out.write("   \r\n");
      out.write("      \r\n");
      out.write("   <script type=\"text/javascript\"\r\n");
      out.write("      src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=6accf207a5a463f46a85bdffeb649e27&libraries=services,clusterer,drawing\"></script>\r\n");
      out.write("   <script>\r\n");
      out.write("      // 마커를 담을 배열입니다\r\n");
      out.write("      var markers = [];\r\n");
      out.write("\r\n");
      out.write("      var mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n");
      out.write("      mapOption = {\r\n");
      out.write("         center : new daum.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표\r\n");
      out.write("         level : 3\r\n");
      out.write("      // 지도의 확대 레벨\r\n");
      out.write("      };\r\n");
      out.write("\r\n");
      out.write("      // 지도를 생성합니다    \r\n");
      out.write("      var map = new daum.maps.Map(mapContainer, mapOption);\r\n");
      out.write("\r\n");
      out.write("      // 장소 검색 객체를 생성합니다\r\n");
      out.write("      var ps = new daum.maps.services.Places();\r\n");
      out.write("\r\n");
      out.write("      // 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\r\n");
      out.write("      var infowindow = new daum.maps.InfoWindow({\r\n");
      out.write("         zIndex : 1\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("      // 키워드로 장소를 검색합니다\r\n");
      out.write("      searchPlaces();\r\n");
      out.write("\r\n");
      out.write("      // 키워드 검색을 요청하는 함수입니다\r\n");
      out.write("      function searchPlaces() {\r\n");
      out.write("\r\n");
      out.write("         var keyword = document.getElementById('keyword').value;\r\n");
      out.write("\r\n");
      out.write("         if (!keyword.replace(/^\\s+|\\s+$/g, '')) {\r\n");
      out.write("            alert('키워드를 입력해주세요!');\r\n");
      out.write("            return false;\r\n");
      out.write("         }\r\n");
      out.write("\r\n");
      out.write("         // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\r\n");
      out.write("         ps.keywordSearch(keyword, placesSearchCB); //1\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\r\n");
      out.write("      function placesSearchCB(data, status, pagination) {\r\n");
      out.write("         if (status === daum.maps.services.Status.OK) {\r\n");
      out.write("\r\n");
      out.write("            // 정상적으로 검색이 완료됐으면\r\n");
      out.write("            // 검색 목록과 마커를 표출합니다\r\n");
      out.write("            displayPlaces(data);\r\n");
      out.write("\r\n");
      out.write("            // 페이지 번호를 표출합니다\r\n");
      out.write("            displayPagination(pagination);\r\n");
      out.write("\r\n");
      out.write("         } else if (status === daum.maps.services.Status.ZERO_RESULT) {\r\n");
      out.write("\r\n");
      out.write("            alert('검색 결과가 존재하지 않습니다.');\r\n");
      out.write("            return;\r\n");
      out.write("\r\n");
      out.write("         } else if (status === daum.maps.services.Status.ERROR) {\r\n");
      out.write("\r\n");
      out.write("            alert('검색 결과 중 오류가 발생했습니다.');\r\n");
      out.write("            return;\r\n");
      out.write("\r\n");
      out.write("         }\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // 검색 결과 목록과 마커를 표출하는 함수입니다\r\n");
      out.write("      function displayPlaces(places) {\r\n");
      out.write("\r\n");
      out.write("         var listEl = document.getElementById('placesList'), menuEl = document\r\n");
      out.write("               .getElementById('menu_wrap'), fragment = document\r\n");
      out.write("               .createDocumentFragment(), bounds = new daum.maps.LatLngBounds(), listStr = '';\r\n");
      out.write("\r\n");
      out.write("         // 검색 결과 목록에 추가된 항목들을 제거합니다\r\n");
      out.write("         removeAllChildNods(listEl);\r\n");
      out.write("\r\n");
      out.write("         // 지도에 표시되고 있는 마커를 제거합니다\r\n");
      out.write("         removeMarker();\r\n");
      out.write("\r\n");
      out.write("         for (var i = 0; i < places.length; i++) {\r\n");
      out.write("\r\n");
      out.write("            // 마커를 생성하고 지도에 표시합니다\r\n");
      out.write("            var placePosition = new daum.maps.LatLng(places[i].y,\r\n");
      out.write("                  places[i].x), marker = addMarker(placePosition, i), itemEl = getListItem(\r\n");
      out.write("                  i, places[i]); // 검색 결과 항목 Element를 생성합니다\r\n");
      out.write("\r\n");
      out.write("            // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n");
      out.write("            // LatLngBounds 객체에 좌표를 추가합니다\r\n");
      out.write("            bounds.extend(placePosition);\r\n");
      out.write("\r\n");
      out.write("            // 마커와 검색결과 항목에 mouseover 했을때\r\n");
      out.write("            // 해당 장소에 인포윈도우에 장소명을 표시합니다\r\n");
      out.write("            // mouseout 했을 때는 인포윈도우를 닫습니다\r\n");
      out.write("            (function(marker, title) {\r\n");
      out.write("               daum.maps.event.addListener(marker, 'mouseover',\r\n");
      out.write("                     function() {\r\n");
      out.write("                        displayInfowindow(marker, title);\r\n");
      out.write("                     });\r\n");
      out.write("\r\n");
      out.write("               daum.maps.event.addListener(marker, 'click', function() {\r\n");
      out.write("                  // title 값 넘겨주는 ajax수행합니다.\r\n");
      out.write("                  $.ajax({\r\n");
      out.write("                     url : './khcc_ajax.nhn',\r\n");
      out.write("                     data : \"title=\" + title,\r\n");
      out.write("                     dataType : \"json\",\r\n");
      out.write("                     cache : false,\r\n");
      out.write("                     headers : {\r\n");
      out.write("                        \"cache-control\" : \"no-cache\",\r\n");
      out.write("                        \"pragma\" : \"no-cache\"\r\n");
      out.write("                     },\r\n");
      out.write("                     success : function(data) {\r\n");
      out.write("                        var output = '';\r\n");
      out.write("                        output += \"<tr><th>이미지</th><th>종류</th><th>모델</th><th>대여 요금</th>\";\r\n");
      out.write("                        output += \"<th>주행 요금</th><th>위치</th><th>예약하기</th></tr>\";\r\n");
      out.write("                        $(data).each(\r\n");
      out.write("                              function(index, item) {\r\n");
      out.write("                                 $(\"#output\").empty();\r\n");
      out.write("                                 output += '<tr><td><img src=./resources/images/car/' + item.c_img + '></td>';\r\n");
      out.write("                                 output += '    <td>' + item.c_kind + '</td>';\r\n");
      out.write("                                 output += '    <td>' + item.c_model + '</td>';\r\n");
      out.write("                                 output += '    <td>' + item.c_rentfee + '원/시간</td>';\r\n");
      out.write("                                 output += '    <td>' + item.c_oilfee + '원/km</td>';\r\n");
      out.write("                                 output += '    <td>' + item.c_place + '</td>';\r\n");
      out.write("                                 output += '    <td><button class=\"btn btn-default\" data-target=\"#reservation\"'\r\n");
      out.write("                                       + 'data-toggle=\"modal\">예약하기</button></td></tr>';\r\n");
      out.write("                                 $('#output').append(output);\r\n");
      out.write("                                 $('#c_img').val(item.c_img);\r\n");
      out.write("                                 $('#c_kind').val(item.c_kind);\r\n");
      out.write("                                 $('#c_model').val(item.c_model);\r\n");
      out.write("                                 $('#c_place').val(item.c_place);\r\n");
      out.write("                                 $('#c_id').val(item.c_id);\r\n");
      out.write("                              })\r\n");
      out.write("                     },\r\n");
      out.write("                     error : function(data) {\r\n");
      out.write("                        alert(\"오류 발생\");\r\n");
      out.write("                     }\r\n");
      out.write("                  });\r\n");
      out.write("               });\r\n");
      out.write("\r\n");
      out.write("               daum.maps.event.addListener(marker, 'mouseout', function() {\r\n");
      out.write("                  infowindow.close();\r\n");
      out.write("               });\r\n");
      out.write("\r\n");
      out.write("               itemEl.onmouseover = function() {\r\n");
      out.write("                  displayInfowindow(marker, title);\r\n");
      out.write("               };\r\n");
      out.write("\r\n");
      out.write("               itemEl.onmouseout = function() {\r\n");
      out.write("                  infowindow.close();\r\n");
      out.write("               };\r\n");
      out.write("            })(marker, places[i].place_name);\r\n");
      out.write("\r\n");
      out.write("            fragment.appendChild(itemEl);\r\n");
      out.write("         }\r\n");
      out.write("\r\n");
      out.write("         // 검색결과 항목들을 검색결과 목록 Elemnet에 추가합니다\r\n");
      out.write("         listEl.appendChild(fragment);\r\n");
      out.write("         menuEl.scrollTop = 0;\r\n");
      out.write("\r\n");
      out.write("         // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n");
      out.write("         map.setBounds(bounds);\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // 검색결과 항목을 Element로 반환하는 함수입니다\r\n");
      out.write("      function getListItem(index, places) {\r\n");
      out.write("\r\n");
      out.write("         var el = document.createElement('li'), itemStr = '<span class=\"markerbg marker_'\r\n");
      out.write("               + (index + 1)\r\n");
      out.write("               + '\"></span>'\r\n");
      out.write("               + '<div class=\"info\">'\r\n");
      out.write("               + '   <h5>' + places.place_name + '</h5>';\r\n");
      out.write("\r\n");
      out.write("         if (places.road_address_name) {\r\n");
      out.write("            itemStr += '    <span>' + places.road_address_name + '</span>' //2\r\n");
      out.write("                  + '   <span class=\"jibun gray\">' + places.address_name\r\n");
      out.write("                  + '</span>';\r\n");
      out.write("         } else {\r\n");
      out.write("            itemStr += '    <span>' + places.address_name + '</span>';\r\n");
      out.write("         }\r\n");
      out.write("\r\n");
      out.write("         itemStr += '  <span class=\"tel\">' + places.phone + '</span>'\r\n");
      out.write("               + '</div>';\r\n");
      out.write("\r\n");
      out.write("         el.innerHTML = itemStr;\r\n");
      out.write("         el.className = 'item';\r\n");
      out.write("\r\n");
      out.write("         return el;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\r\n");
      out.write("      function addMarker(position, idx, title) {\r\n");
      out.write("         var imageSrc = 'http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png', // 마커 이미지 url, 스프라이트 이미지를 씁니다\r\n");
      out.write("         imageSize = new daum.maps.Size(36, 37), // 마커 이미지의 크기\r\n");
      out.write("         imgOptions = {\r\n");
      out.write("            spriteSize : new daum.maps.Size(36, 691), // 스프라이트 이미지의 크기\r\n");
      out.write("            spriteOrigin : new daum.maps.Point(0, (idx * 46) + 10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\r\n");
      out.write("            offset : new daum.maps.Point(13, 37)\r\n");
      out.write("         // 마커 좌표에 일치시킬 이미지 내에서의 좌표\r\n");
      out.write("         }, markerImage = new daum.maps.MarkerImage(imageSrc, imageSize,\r\n");
      out.write("               imgOptions), marker = new daum.maps.Marker({\r\n");
      out.write("            position : position, // 마커의 위치\r\n");
      out.write("            image : markerImage\r\n");
      out.write("         });\r\n");
      out.write("\r\n");
      out.write("         marker.setMap(map); // 지도 위에 마커를 표출합니다\r\n");
      out.write("         markers.push(marker); // 배열에 생성된 마커를 추가합니다\r\n");
      out.write("\r\n");
      out.write("         return marker;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // 지도 위에 표시되고 있는 마커를 모두 제거합니다\r\n");
      out.write("      function removeMarker() {\r\n");
      out.write("         for (var i = 0; i < markers.length; i++) {\r\n");
      out.write("            markers[i].setMap(null);\r\n");
      out.write("         }\r\n");
      out.write("         markers = [];\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\r\n");
      out.write("      function displayPagination(pagination) {\r\n");
      out.write("         var paginationEl = document.getElementById('pagination'), fragment = document\r\n");
      out.write("               .createDocumentFragment(), i;\r\n");
      out.write("\r\n");
      out.write("         // 기존에 추가된 페이지번호를 삭제합니다\r\n");
      out.write("         while (paginationEl.hasChildNodes()) {\r\n");
      out.write("            paginationEl.removeChild(paginationEl.lastChild);\r\n");
      out.write("         }\r\n");
      out.write("\r\n");
      out.write("         for (i = 1; i <= pagination.last; i++) {\r\n");
      out.write("            var el = document.createElement('a');\r\n");
      out.write("            el.href = \"#\";\r\n");
      out.write("            el.innerHTML = i;\r\n");
      out.write("\r\n");
      out.write("            if (i === pagination.current) {\r\n");
      out.write("               el.className = 'on';\r\n");
      out.write("            } else {\r\n");
      out.write("               el.onclick = (function(i) {\r\n");
      out.write("                  return function() {\r\n");
      out.write("                     pagination.gotoPage(i);\r\n");
      out.write("                  }\r\n");
      out.write("               })(i);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            fragment.appendChild(el);\r\n");
      out.write("         }\r\n");
      out.write("         paginationEl.appendChild(fragment);\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\r\n");
      out.write("      // 인포윈도우에 장소명을 표시합니다\r\n");
      out.write("      function displayInfowindow(marker, title) {\r\n");
      out.write("         var content = '<div style=\"padding:5px;z-index:1;\">' + title\r\n");
      out.write("               + '</div>';\r\n");
      out.write("\r\n");
      out.write("         infowindow.setContent(content);\r\n");
      out.write("         infowindow.open(map, marker);\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // 검색결과 목록의 자식 Element를 제거하는 함수입니다\r\n");
      out.write("      function removeAllChildNods(el) {\r\n");
      out.write("         while (el.hasChildNodes()) {\r\n");
      out.write("            el.removeChild(el.lastChild);\r\n");
      out.write("         }\r\n");
      out.write("      }\r\n");
      out.write("   </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /jsp/reservation/khcc_reservation.jsp(45,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${!empty login_email}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write('\r');
          out.write('\n');
          out.write("\r\n");
          out.write("\r\n");
          out.write("\r\n");
          out.write("<link href=\"./resources/bootstrap-css/bootstrap.min.css\"\r\n");
          out.write("\trel=\"stylesheet\">\r\n");
          out.write("<link href=\"./resources/bootstrap-css/prettyPhoto.css\" rel=\"stylesheet\">\r\n");
          out.write("<link href=\"./resources/bootstrap-css/font-awesome.min.css\"\r\n");
          out.write("\trel=\"stylesheet\">\r\n");
          out.write("<link href=\"./resources/bootstrap-css/animate.css\" rel=\"stylesheet\">\r\n");
          out.write("<link href=\"./resources/bootstrap-css/main.css\" rel=\"stylesheet\">\r\n");
          out.write("<link href=\"./resources/bootstrap-css/responsive.css\" rel=\"stylesheet\">\r\n");
          out.write("\r\n");
          out.write("<script src=\"./resources/js/jquery-3.2.1.js\"></script>\r\n");
          out.write("\r\n");
          out.write("\r\n");
          out.write("\t<script type=\"text/javascript\" src=\"./resources/bootstrap-js/jquery.js\"></script>\r\n");
          out.write("\t<script type=\"text/javascript\"\r\n");
          out.write("\t\tsrc=\"./resources/bootstrap-js/bootstrap.min.js\"></script>\r\n");
          out.write("\t<script type=\"text/javascript\"\r\n");
          out.write("\t\tsrc=\"./resources/bootstrap-js/smoothscroll.js\"></script>\r\n");
          out.write("\t<script type=\"text/javascript\"\r\n");
          out.write("\t\tsrc=\"./resources/bootstrap-js/jquery.isotope.min.js\"></script>\r\n");
          out.write("\t<script type=\"text/javascript\"\r\n");
          out.write("\t\tsrc=\"./resources/bootstrap-js/jquery.prettyPhoto.js\"></script>\r\n");
          out.write("\t<script type=\"text/javascript\"\r\n");
          out.write("\t\tsrc=\"./resources/bootstrap-js/jquery.parallax.js\"></script>\r\n");
          out.write("\t<script type=\"text/javascript\" src=\"./resources/bootstrap-js/main.js\"></script>\r\n");
          out.write("\t\r\n");
          out.write("\t<script>\r\n");
          out.write("\t\t/* 비밀번호 찾기 팝업창 */\r\n");
          out.write("\t\tfunction pwd_find() {\r\n");
          out.write("\t\t\twindow.open(\"pwd_find.nhn\", \"비밀번호 찾기\", \"width=400, height=300\");\r\n");
          out.write("\t\t\t// 자바 스크립트에서 window 객체의  open(\"팝업창 경로와 파일명\", \"팝업창 이름\", \"팝업창 속성\");\r\n");
          out.write("\t\t\t// 메서드로 새로운 팝업창을 만듭니다. 폭이 400, 높이가 300인 새로운 팝업창. 단위는 픽셀\r\n");
          out.write("\t\t}\r\n");
          out.write("\t\tfunction reportwindow() {\r\n");
          out.write("\t\t\turl = \"./khcc_reportwrite.nhn\";\r\n");
          out.write("\t\t\twindow.open(url, \"report\", \"toolbar=no, status=yes, menubar=no,\"\r\n");
          out.write("\t\t\t\t\t+ \"scrollbars=yes, directories=no, top=100, left=400,\"\r\n");
          out.write("\t\t\t\t\t+ \"width=470px, height=500px\");\r\n");
          out.write("\t\t}\r\n");
          out.write("\t\tfunction reportlistwindow() {\r\n");
          out.write("\t\t\turl = \"./khcc_reportlist.nhn\";\r\n");
          out.write("\r\n");
          out.write("\t\t\twindow.open(url, \"report\", \"toolbar=no, status=yes, menubar=no,\"\r\n");
          out.write("\t\t\t\t\t+ \"scrollbars=yes, directories=no,\"\r\n");
          out.write("\t\t\t\t\t+ \"width=600px, height=450px\");\r\n");
          out.write("\t\t}\r\n");
          out.write("\r\n");
          out.write("\t\t$('li.dropdown').hover(\r\n");
          out.write("\t\t\t\tfunction() {\r\n");
          out.write("\t\t\t\t\t$(this).find('.dropdown-menu').stop(true, true).delay(200)\r\n");
          out.write("\t\t\t\t\t\t\t.fadeIn(500);\r\n");
          out.write("\t\t\t\t},\r\n");
          out.write("\t\t\t\tfunction() {\r\n");
          out.write("\t\t\t\t\t$(this).find('.dropdown-menu').stop(true, true).delay(200)\r\n");
          out.write("\t\t\t\t\t\t\t.fadeOut(500);\r\n");
          out.write("\t\t\t\t});\r\n");
          out.write("\t</script>\r\n");
          out.write("\r\n");
          out.write("\r\n");
          out.write("\t<header id=\"navigation\">\r\n");
          out.write("\t\t<div class=\"navbar navbar-inverse navbar-fixed-top\" role=\"banner\">\r\n");
          out.write("\t\t\t<div class=\"container\">\r\n");
          out.write("\t\t\t\t<div class=\"navbar-header\">\r\n");
          out.write("\t\t\t\t\t<a class=\"navbar-brand\" onclick=\"loaction:href='khcc_home.nhn'\"\r\n");
          out.write("\t\t\t\t\t\tstyle=\"cursor: pointer\"> <img\r\n");
          out.write("\t\t\t\t\t\tsrc=\"./resources/images/logo.png\">\r\n");
          out.write("\t\t\t\t\t</a>\r\n");
          out.write("\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t<!-- 일반사용자일 때 -->\r\n");
          out.write("\t\t\t\t");
          if (_jspx_meth_c_005fif_005f1(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t<!-- 관리자 계정으로 접속할 때 -->\r\n");
          out.write("\t\t\t\t");
          if (_jspx_meth_c_005fif_005f2(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t\t</div>\r\n");
          out.write("\t\t\t<div>\r\n");
          out.write("\t\t\t\t<a href=\"khcc_logout.nhn\" style=\"float: right\">로그아웃</a>\r\n");
          out.write("\t\t\t</div>\r\n");
          out.write("\t\t\t<div>\r\n");
          out.write("\t\t\t\t<a href=\"khcc_mypage.nhn\" style=\"float: right\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${m_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("님 환영합니다.</a>\r\n");
          out.write("\t\t\t</div>\r\n");
          out.write("\t\t</div>\r\n");
          out.write("\t\t<!--/navbar-->\r\n");
          out.write("\t</header>\r\n");
          out.write("\t<!--/#navigation-->");
          out.write('\r');
          out.write('\n');
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /jsp/reservation/../include/menubar_login.jsp(73,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login_email != 'admin@khcc.com'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t<div class=\"collapse navbar-collapse\">\r\n");
          out.write("\t\t\t\t\t\t<ul class=\"nav navbar-nav navbar-right\">\r\n");
          out.write("\t\t\t\t\t\t\t<li><a href=\"khcc_servicesview.nhn\">서비스 안내</a></li>\r\n");
          out.write("\t\t\t\t\t\t\t<li><a href=\"khcc_reservation.nhn\">실시간 예약</a></li>\r\n");
          out.write("\t\t\t\t\t\t\t<li class=\"drop\tdown\"><a href=\"#\"\r\n");
          out.write("\t\t\t\t\t\t\t\tclass=\"dropdown-toggle\" data-toggle=\"dropdown\">카풀</a>\r\n");
          out.write("\t\t\t\t\t\t\t\t<ul class=\"dropdown-menu\">\r\n");
          out.write("\t\t\t\t\t\t\t\t\t<li><a href=\"cp_list\">Driver</a></li>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t<li><a href=\"javascript:window.open('./rider', '카풀등록', 'width=800,height=500,scrollbars=yes');\">Rider</a></li>\r\n");
          out.write("\t\t\t\t\t\t\t\t</ul></li>\r\n");
          out.write("\t\t\t\t\t\t\t<li><a href=\"qa_list.nhn\">REVIEW</a></li>\r\n");
          out.write("                  \t\t\t<li><a href=\"nt_list.nhn\">고객센터</a></li>\r\n");
          out.write("\t\t\t\t\t\t\t<li><a href=\"khcc_mypage.nhn\">마이페이지</a></li>\r\n");
          out.write("\t\t\t\t\t\t\t<li><a href=\"javascript:reportwindow()\"> <img\r\n");
          out.write("\t\t\t\t\t\t\t\t\tsrc=\"./resources/images/reporticon.png\" style=\"width:20px; height:20px\">신고하기</a>\r\n");
          out.write("\t\t\t\t\t\t</ul>\r\n");
          out.write("\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /jsp/reservation/../include/menubar_login.jsp(94,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login_email eq 'admin@khcc.com'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t<div class=\"collapse navbar-collapse\">\r\n");
          out.write("\t\t\t\t\t\t<ul class=\"nav navbar-nav navbar-right\">\r\n");
          out.write("\t\t\t\t\t\t\t<li><a href=\"javascript:reportlistwindow()\">신고함</a></li>\r\n");
          out.write("\t\t\t\t\t\t\t<li><a href=\"khcc_servicesview.nhn\">서비스 안내</a></li>\r\n");
          out.write("\t\t\t\t\t\t\t<li><a href=\"khcc_reservation.nhn\">실시간 예약</a></li>\r\n");
          out.write("\t\t\t\t\t\t\t<li class=\"drop\tdown\"><a href=\"#\"\r\n");
          out.write("\t\t\t\t\t\t\t\tclass=\"dropdown-toggle\" data-toggle=\"dropdown\">카풀</a>\r\n");
          out.write("\t\t\t\t\t\t\t\t<ul class=\"dropdown-menu\">\r\n");
          out.write("\t\t\t\t\t\t\t\t\t<li><a href=\"cp_list\">Driver</a></li>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t<li><a href=\"javascript:window.open('./rider', '카풀등록', 'width=800,height=500,scrollbars=yes');\">Rider</a></li>\r\n");
          out.write("\t\t\t\t\t\t\t\t</ul></li>\r\n");
          out.write("\t\t\t\t\t\t\t<li><a href=\"qa_list.nhn\">REVIEW</a></li>\r\n");
          out.write("                  \t\t\t<li><a href=\"nt_list.nhn\">고객센터</a></li>\r\n");
          out.write("\t\t\t\t\t\t\t<li><a href=\"khcc_adminpage.nhn\">관리자페이지</a></li>\r\n");
          out.write("\t\t\t\t\t\t</ul>\r\n");
          out.write("\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent(null);
      // /jsp/reservation/khcc_reservation.jsp(49,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty login_email}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write('\r');
          out.write('\n');
          out.write("\r\n");
          out.write("<link href=\"./resources/bootstrap-css/bootstrap.min.css\"\r\n");
          out.write("\trel=\"stylesheet\">\r\n");
          out.write("<link href=\"./resources/bootstrap-css/prettyPhoto.css\" rel=\"stylesheet\">\r\n");
          out.write("<link href=\"./resources/bootstrap-css/font-awesome.min.css\"\r\n");
          out.write("\trel=\"stylesheet\">\r\n");
          out.write("<link href=\"./resources/bootstrap-css/animate.css\" rel=\"stylesheet\">\r\n");
          out.write("<link href=\"./resources/bootstrap-css/main.css\" rel=\"stylesheet\">\r\n");
          out.write("<link href=\"./resources/bootstrap-css/responsive.css\" rel=\"stylesheet\">\r\n");
          out.write("<script src=\"./resources/js/jquery-3.2.1.js\"></script>\r\n");
          out.write("<script type=\"text/javascript\" src=\"./resources/bootstrap-js/jquery.js\"></script>\r\n");
          out.write("\t<script type=\"text/javascript\"\r\n");
          out.write("\t\tsrc=\"./resources/bootstrap-js/bootstrap.min.js\"></script>\r\n");
          out.write("\t<script type=\"text/javascript\"\r\n");
          out.write("\t\tsrc=\"./resources/bootstrap-js/smoothscroll.js\"></script>\r\n");
          out.write("\t<script type=\"text/javascript\"\r\n");
          out.write("\t\tsrc=\"./resources/bootstrap-js/jquery.isotope.min.js\"></script>\r\n");
          out.write("\t<script type=\"text/javascript\"\r\n");
          out.write("\t\tsrc=\"./resources/bootstrap-js/jquery.prettyPhoto.js\"></script>\r\n");
          out.write("\t<script type=\"text/javascript\"\r\n");
          out.write("\t\tsrc=\"./resources/bootstrap-js/jquery.parallax.js\"></script>\r\n");
          out.write("\t<script type=\"text/javascript\" src=\"./resources/bootstrap-js/main.js\"></script>\r\n");
          out.write("<script>\r\n");
          out.write("\t$('li.dropdown').hover(function() {\r\n");
          out.write("\t  $(this).find('.dropdown-menu').stop(true, true).delay(200).fadeIn(500);\r\n");
          out.write("\t}, function() {\r\n");
          out.write("\t  $(this).find('.dropdown-menu').stop(true, true).delay(200).fadeOut(500);\r\n");
          out.write("\t});\r\n");
          out.write("</script>\r\n");
          out.write("\r\n");
          out.write("\t<header id=\"navigation\">\r\n");
          out.write("\t\t<div class=\"navbar navbar-inverse navbar-fixed-top\" role=\"banner\">\r\n");
          out.write("\t\t\t<div class=\"container\">\r\n");
          out.write("\t\t\t\t<div class=\"navbar-header\">\r\n");
          out.write("\t\t\t\t\t<a class=\"navbar-brand\" onclick=\"loaction:href='khcc_home.nhn'\"\r\n");
          out.write("\t\t\t\t\t\tstyle=\"cursor: pointer\"> \r\n");
          out.write("\t\t\t\t\t\t<img src=\"./resources/images/logo.png\">\r\n");
          out.write("\t\t\t\t\t</a>\r\n");
          out.write("\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t<div class=\"collapse navbar-collapse\">\r\n");
          out.write("\t\t\t\t\t<ul class=\"nav navbar-nav navbar-right\">\r\n");
          out.write("\t\t\t\t\t\t<li><a href=\"khcc_servicesview.nhn\">서비스 안내</a></li>\r\n");
          out.write("\t\t\t\t\t\t<li><a href=\"khcc_reservation.nhn\">실시간 예약</a></li>\r\n");
          out.write("\t\t\t\t\t\t<li class=\"drop\tdown\"><a href=\"#\"\r\n");
          out.write("\t\t\t\t\t\t\t\tclass=\"dropdown-toggle\" data-toggle=\"dropdown\">카풀</a>\r\n");
          out.write("\t\t\t\t\t\t\t\t<ul class=\"dropdown-menu\">\r\n");
          out.write("\t\t\t\t\t\t\t\t\t<li><a href=\"cp_list\">Driver</a></li>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t<li><a href=\"javascript:window.open('./rider', '카풀등록', 'width=800,height=500,scrollbars=yes');\">Rider</a></li>\r\n");
          out.write("\t\t\t\t\t\t\t\t</ul></li>\r\n");
          out.write("\t\t\t\t\t\t<li><a href=\"qa_list.nhn\">REVIEW</a></li>\r\n");
          out.write("                  \t\t<li><a href=\"nt_list.nhn\">고객센터</a></li>\r\n");
          out.write("\t\t\t\t\t\t<li><a href=\"khcc_login.nhn\">로그인</a></li>\r\n");
          out.write("\t\t\t\t\t\t<li><a href=\"khcc_join.nhn\">회원가입</a></li>\r\n");
          out.write("\t\t\t\t\t</ul>\r\n");
          out.write("\t\t\t\t</div>\r\n");
          out.write("\t\t\t</div>\r\n");
          out.write("\t\t</div>\r\n");
          out.write("\t\t<!--/navbar-->\r\n");
          out.write("\t</header>\r\n");
          out.write("\t<!--/#navigation-->");
          out.write('\r');
          out.write('\n');
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /jsp/reservation/khcc_reservation.jsp(94,27) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("t");
      // /jsp/reservation/khcc_reservation.jsp(94,27) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/jsp/reservation/khcc_reservation.jsp(94,27) '${time}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${time}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("                              <option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${t}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${t}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("                           ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent(null);
      // /jsp/reservation/khcc_reservation.jsp(102,27) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("t");
      // /jsp/reservation/khcc_reservation.jsp(102,27) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/jsp/reservation/khcc_reservation.jsp(102,27) '${time}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${time}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("                              <option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${t}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${t}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("                           ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }
}
